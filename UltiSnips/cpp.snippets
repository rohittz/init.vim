snippet cppcp "Template" i
// Approach -
/*
	${VISUAL}
*/
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int ui;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef size_t st;

#define OJ
#define pb push_back
#define F first
#define S second

#define WLL(t) while(t--)
#define FOR(i,a,b) for(int i = a; i < b; i++)
#define STF(i, a, b) for(size_t i = a; i < b; i++)
#define RFOR(i, a, b) for(int i = a; i >= b; i--)
#define SRF(i, a, b) for(size_t i = a;i >= b;i--)

#define ALL(v) v.begin(),v.end()
#define FPRECISE(x) cout<<fixed<<setprecision(x)
#define PRECISE(x) cout<<setprecision(x)
#define BOOL cout<<boolalpha
#define FASTIO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define READ freopen("../input.txt", "r", stdin)
#define WRITE freopen("output.txt", "w", stdout)
#define MOD 1000000007

#define TO(v, type) static_cast<type>(v)
int main()
{
#ifdef OJ
	READ;
#endif
	FASTIO;
	${0}
	return 0;
}
endsnippet

snippet cppnm "Template" bA
#include <iostream>
using namespace std;
int main()
{
	${1}
	return 0;
}
endsnippet
